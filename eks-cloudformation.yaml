Resources:
  EKSSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Inbound and outbound traffic for service
      GroupName: 's3-authz-demo-sg'
      VpcId: 'vpc-06afd7fe5d7df3830'
      Tags:
        - Key: "prospect"
          Value: "novartis"
      SecurityGroupEgress:
        - IpProtocol: "tcp"
          FromPort: 0
          ToPort: 0
          CidrIp: 0.0.0.0/0
      SecurityGroupIngress:
        - IpProtocol: "tcp"
          FromPort: 0
          ToPort: 0
          CidrIp: 0.0.0.0/0
  EKSCluster:
    Type: AWS::EKS::Cluster
    Properties:
      Name: s3-authz-demo
      RoleArn: "arn:aws:iam::728162064813:role/eksClusterRole"
      ResourcesVpcConfig:
        SecurityGroupIds:
          - !Ref EKSSecurityGroup
        SubnetIds:
          - subnet-0a246394e264c77e5
          - subnet-085f3d5c37ab3e253
        EndpointPublicAccess: true
        EndpointPrivateAccess: true
        PublicAccessCidrs: [ "0.0.0.0/0" ]
      Tags:
        - Key: "prospect"
          Value: "novartis"
  EKSNodegroup:
    Type: 'AWS::EKS::Nodegroup'
    DependsOn: EKSCluster
    Properties:
      ClusterName: s3-authz-demo
      NodeRole: 'arn:aws:iam::728162064813:role/AmazonEKSNodeRole-S3-Authz-Demo'
      ScalingConfig:
        MinSize: 1
        DesiredSize: 1
        MaxSize: 3
      Labels:
        prospect: novartis
      Subnets:
        - subnet-0a246394e264c77e5
        - subnet-085f3d5c37ab3e253

# Node role ARN: arn:aws:iam::728162064813:role/AmazonEKSNodeRole-S3-Authz-Demo